To add a Table

indian currency link :
https://images.pexels.com/photos/10326878/pexels-photo-10326878.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1

forgin currency:
https://media.istockphoto.com/id/1360548747/photo/investments-growing-in-a-bull-market-concept.jpg?s=2048x2048&w=is&k=20&c=JEXmErXFH-_AtcFkiI5ffrhgxk_HU2V4RH1HuucEtlY=

all table headers:
    <tr>
                {Heading.map((d) => (
                  <th>{d.Head}</th>
                ))}
              </tr>
product table body :
{ProductArray.map((d) => (
  <tr>
    <td>{d.v1}</td>
    <td>{d.v2}</td>
    <td>{d.v3}</td>
    <td>{d.v4}</td>
    <td>{d.v5}</td>
    <td>
      <Button href={d.Link} variant="link">
        {d.v6}
      </Button>
    </td>
  </tr>
))}

sign up side image:

https://i.pinimg.com/564x/27/d7/6e/27d76e92efedd268d12da1100366882e.jpg


product table:

import React from "react";
import Button from "react-bootstrap/Button";
import Col from "react-bootstrap/Col";
import Row from "react-bootstrap/Row";
import Table from "react-bootstrap/Table";
import Container from "react-bootstrap/esm/Container";
import ProductArray from "./ProductArray";
import Form from 'react-bootstrap/Form';
import ProductSearchComponent from "../../search/ProductSearchComponent ";
import Titlebars from "../../components/navbar/Titlebar";
import NavBar from "../../components/navbar/Navbar2";


function ProductTable() {
  return (
    <>
    <Titlebars/>
    <NavBar/>
    <div
      style={{
        backgroundImage:
          'url("https://images.pexels.com/photos/10326878/pexels-photo-10326878.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1")',
        backgroundRepeat: "no-repeat",
        backgroundSize: "cover",
        height: 2400,
        backgroundPosition: "",
      }}
    >
      <Container>
        <Row>
          <Col md={4} xs={4}></Col>
          <Col md={4} xs={4}>
            <h1
              style={{
                marginTop: 70,
                WebkitTextStrokeColor: "white",
                WebkitTextStrokeWidth: "2px",
                color: "black",
                fontWeight: 800,
              }}
            >
              Product Details
            </h1>
          </Col>
          <Col md={2} xs={2}></Col>

          <Col md={2} xs={2}>
            <Button
              href="/CreateProduct"
              variant="warning"
              style={{ marginTop: 120 }}
            >
              Create Product
            </Button>{" "}
          </Col>
        </Row>

        <Row style={{marginTop:50}}>
        <Form>
        <Row>
          <Col xs={1}></Col>
        <Col>

        <ProductSearchComponent products={ProductArray} />

        </Col>
        <Col>
        <Form.Group controlId="formGridState">
          <Form.Select style={{border:"2px solid cadetblue"}} defaultValue="Choose...">
            <option>choose category</option>
            <option>Hardwares</option>
            <option>Electronics</option>
            <option>Computer&Accessories</option>
            <option>Food and instruments</option>
            <option>Clothing</option>
          </Form.Select>
        </Form.Group>
        </Col>
        <Col>
          <Form.Control style={{border:"2px solid cadetblue"}} placeholder="Price" />
        </Col>
        <Col>
        <Button variant="success">Search</Button>{' '}
        </Col>
        <Col  xs={1}></Col>
      </Row>
    </Form>
        </Row>

        <Row  style={{ marginTop: 30 }}>
          <Table striped hover>
            <thead>
              <tr>
               <th>ID </th>
               <th>Name </th>
               <th>Category </th>
               <th>Price </th>
               <th>Stock Amount </th>
               <th>Action </th>
              </tr>
            </thead>
            <tbody>
              {ProductArray.map((d) => (
                <tr>
                  <td>{d.v1}</td>
                  <td>{d.v2}</td>
                  <td>{d.v3}</td>
                  <td>{d.v4}</td>
                  <td>{d.v5}</td>
                  <td>
                    <Button href={d.Link} variant="link">
                      {d.v6}
                    </Button>
                  </td>
                </tr>
              ))}
            </tbody>
          </Table>
        </Row>
      </Container>
    </div></>
  );
}

export default ProductTable;


/// search product table , work well :

import React, { useState } from "react";
import Button from "react-bootstrap/Button";
import Col from "react-bootstrap/Col";
import Row from "react-bootstrap/Row";
import Table from "react-bootstrap/Table";
import Container from "react-bootstrap/esm/Container";
import ProductArray from "./ProductArray";
import Form from 'react-bootstrap/Form';

import Titlebars from "../../components/navbar/Titlebar";
import NavBar from "../../components/navbar/Navbar2";

function ProductTable() {
  const [searchQuery, setSearchQuery] = useState("");
  const [filteredProducts, setFilteredProducts] = useState(ProductArray);

  const handleSearch = () => {
    const lowerCaseQuery = searchQuery.toLowerCase();
    const filtered = ProductArray.filter(
      (product) =>
        product.v1.toLowerCase().includes(lowerCaseQuery) ||
        product.v2.toLowerCase().includes(lowerCaseQuery) ||
        product.v3.toLowerCase().includes(lowerCaseQuery)
    );
    setFilteredProducts(filtered);
  };

  const resetSearch = () => {
    setSearchQuery("");
    setFilteredProducts(ProductArray);
  };

  return (
    <>
      <Titlebars />
      <NavBar />

      <div
        style={{
          backgroundImage:
            'url("https://images.pexels.com/photos/10326878/pexels-photo-10326878.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1")',
          backgroundRepeat: "no-repeat",
          backgroundSize: "cover",
          height: 2500,
          backgroundPosition: "",
        }}
      >
        <Container>
          <Row>
            <Col md={4} xs={4}></Col>
            <Col md={4} xs={4}>
              <h1
                style={{
                  marginTop: 70,
                  WebkitTextStrokeColor: "white",
                  WebkitTextStrokeWidth: "2px",
                  color: "black",
                  fontWeight: 800,
                }}
              >
                Product Details
              </h1>
            </Col>
            <Col md={2} xs={2}></Col>

            <Col md={2} xs={2}>
              <Button
                href="/CreateProduct"
                variant="warning"
                style={{ marginTop: 120 }}
              >
                Create Product
              </Button>{" "}
            </Col>
          </Row>

          <Row style={{ marginTop: 50 }}>
            <Form>
              <Row>
                <Col xs={1}></Col>
                <Col>
                  <Form.Control
                    style={{ border: "2px solid cadetblue" }}
                    placeholder="Search by Name, Category, or ID"
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                  />
                </Col>
                <Col>
                  <Form.Group controlId="formGridState">
                    <Form.Select
                      style={{ border: "2px solid cadetblue" }}
                      defaultValue="Choose..."
                    >
                      <option>choose category</option>
                      <option>Hardwares</option>
                      <option>Electronics</option>
                      <option>Computer&Accessories</option>
                      <option>Food and instruments</option>
                      <option>Clothing</option>
                    </Form.Select>
                  </Form.Group>
                </Col>
                <Col>
                  <Form.Control
                    style={{ border: "2px solid cadetblue" }}
                    placeholder="Price"
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                  />
                </Col>
                <Col>
                  <Button variant="success" onClick={handleSearch}>
                    Search
                  </Button>{" "}
                </Col>
                <Col xs={1}>
                  {searchQuery && (
                    <Button variant="danger" onClick={resetSearch}>
                      Reset
                    </Button>
                  )}
                </Col>
              </Row>
            </Form>
          </Row>

          <Row style={{ marginTop: 30 }}>
            <Table striped hover>
              <thead>
                <tr>
                  <th>ID</th>
                  <th>Name</th>
                  <th>Category</th>
                  <th>Price</th>
                  <th>Stock Amount</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody>
                {filteredProducts.map((d) => (
                  <tr key={d.v1}>
                    <td>{d.v1}</td>
                    <td>{d.v2}</td>
                    <td>{d.v3}</td>
                    <td>{d.v4}</td>
                    <td>{d.v5}</td>
                    <td>
                      <Button href={d.Link} variant="link">
                        {d.v6}
                      </Button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </Table>
          </Row>
        </Container>
      </div>
    </>
  );
}

export default ProductTable;
//////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Perfect search table:

import React, { useState } from "react";
import Button from "react-bootstrap/Button";
import Col from "react-bootstrap/Col";
import Form from 'react-bootstrap/Form';
import Row from "react-bootstrap/Row";
import Table from "react-bootstrap/Table";
import Container from "react-bootstrap/esm/Container";
import NavBar from "../../components/navbar/Navbar2";
import Titlebars from "../../components/navbar/Titlebar";
import ProductArray from "./ProductArray";

function ProductTable() {
  
  const [searchQuery, setSearchQuery] = useState("");
  const [category, setCategory] = useState("");
  const [price, setPrice] = useState("");
  const [filteredProducts, setFilteredProducts] = useState(ProductArray);

  const filterProducts = () => {
    const lowerCaseQuery = searchQuery.toLowerCase();
    const lowerCaseCategory = category.toLowerCase();
    const filtered = ProductArray.filter(
      (product) =>
        product.v2.toLowerCase().includes(lowerCaseQuery) &&
        product.v3.toLowerCase().includes(lowerCaseCategory) &&
        product.v4.toString().includes(price)
    );
    setFilteredProducts(filtered);
  };

  const resetSearch = () => {
    setSearchQuery("");
    setCategory("");
    setPrice("");
    setFilteredProducts(ProductArray);
  };

  return (
    <>
      <Titlebars />
      <NavBar />
      <div
        style={{
          backgroundImage:
            'url("https://images.pexels.com/photos/10326878/pexels-photo-10326878.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1")',
          backgroundRepeat: "no-repeat",
          backgroundSize: "cover",
          height: 2400,
          backgroundPosition: "",
        }}
      >
        <Container>
        <Row>
          <Col md={4} xs={4}></Col>
          <Col md={4} xs={4}>
            <h1
              style={{
                marginTop: 70,
                WebkitTextStrokeColor: "white",
                WebkitTextStrokeWidth: "2px",
                color: "black",
                fontWeight: 800,
              }}
            >
              Product Details
            </h1>
          </Col>
          <Col md={2} xs={2}></Col>

          <Col md={2} xs={2}>
            <Button
              href="/CreateProduct"
              variant="warning"
              style={{ marginTop: 120 }}
            >
              Create Product
            </Button>{" "}
          </Col>
        </Row>

          <Row style={{ marginTop: 50 }}>
            <Form>
              <Row>
                <Col xs={1}></Col>
                <Col>
                  <Form.Control
                    style={{ border: "2px solid cadetblue" }}
                    placeholder="Product Name"
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                    onBlur={filterProducts}
                  />
                </Col>
                <Col>
                  <Form.Group controlId="formGridState">
                    <Form.Select
                      style={{ border: "2px solid cadetblue" }}
                      value={category}
                      onChange={(e) => setCategory(e.target.value)}
                      onBlur={filterProducts}
                    >
                      <option value="">Choose category</option>
                      <option value="Hardwares">Hardwares</option>
                      <option value="Computer Accessories">Computer Accessories</option>
                      <option value="Health & Beauty ">Health & Beauty</option>
                      <option value="Watch & Sunglasses">Watch & Sunglasses</option>
                      <option value="Computer & Laptop">Computer & Laptop</option>
                    </Form.Select>
                  </Form.Group>
                </Col>
                <Col>
                  <Form.Control
                    style={{ border: "2px solid cadetblue" }}
                    placeholder="Price"
                    value={price}
                    onChange={(e) => setPrice(e.target.value)}
                    onBlur={filterProducts}
                  />
                </Col>
                <Col>
                  <Button variant="success" onClick={filterProducts}>
                    Search
                  </Button>{" "}
                </Col>
                <Col xs={1}>
                  {(searchQuery || category || price) && (
                    <Button variant="danger" onClick={resetSearch}>
                      Reset
                    </Button>
                  )}
                </Col>
              </Row>
            </Form>
          </Row>

          <Row style={{ marginTop: 30 }}>
            <Table striped hover>
              <thead>
                <tr>
                  <th>ID</th>
                  <th>Name</th>
                  <th>Category</th>
                  <th>Price</th>
                  <th>Stock Amount</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody>
                {filteredProducts.map((d) => (
                  <tr key={d.v1}>
                    <td>{d.v1}</td>
                    <td>{d.v2}</td>
                    <td>{d.v3}</td>
                    <td>{d.v4}</td>
                    <td>{d.v5}</td>
                    <td>
                      <Button href={d.Link} variant="link">
                        {d.v6}
                      </Button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </Table>
          </Row>
        </Container>
      </div>
    </>
  );
}

export default ProductTable;
//////////////////////////////////////////////////////////////////////////////////////

Istock Url :

https://media.istockphoto.com/id/1360548747/photo/investments-growing-in-a-bull-market-concept.jpg?s=2048x2048&w=is&k=20&c=JEXmErXFH-_AtcFkiI5ffrhgxk_HU2V4RH1HuucEtlY=

//////////////////////////////////////////////////////////



/* Coommon Button */
  .Commonbutton {
    display: inline-block;
    padding: 5px 12px;
    margin: 10px;
    font-size: 15px;
    font-weight: bold;
    text-transform: uppercase;
    color: #fff;
    background-image: linear-gradient(to bottom right, #00c6ff, #0072ff);
    border: none;
    border-radius: 40px;
    box-shadow: 0px 4px 0px #0072ff;
    transition: all 0.2s ease-in-out;
    cursor: pointer;
  }
  
  .Commonbutton:hover {
    transform: translateY(-2px);
    box-shadow: 0px 6px 0px #0072ff;
  }
  
  .Commonbutton:active {
    transform: translateY(0px);
    box-shadow: none;
    background-image: linear-gradient(to bottom right, #0072ff, #00c6ff);
  }
  
  .Commonbutton:before,
  .Commonbutton:after {
    content: "";
    position: absolute;
    width: 0;
    height: 0;
  }
  
  .Commonbutton:before {
    top: -3px;
    left: -3px;
    border-radius: 40px;
    border-top: 3px solid #fff;
    border-left: 3px solid #fff;
  }
  
  .Commonbutton:after {
    bottom: -3px;
    right: -3px;
    border-radius: 40px;
    border-bottom: 3px solid #fff;
    border-right: 3px solid #fff;
  }
  
  /* --------------------------------------- */
  


  // let  NewInvoicetArray = [
//     {

//       v1: "1",
//       v2: "computer Chip",
//       v3: "Computer Accessories",
//       v4: "500",
//       v5: "10",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "2",
//       v2: "GAMING MOUSE",
//       v3: "Computer & Laptop",
//       v4: "600",
//       v5: "17",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "3",
//       v2: "Bandages",
//       v3: "Health & Beauty ",
//       v4: "900",
//       v5: "100",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "4",
//       v2: "Stylish White Sunglasses",
//       v3: "Watch & Sunglasses",
//       v4: "800",
//       v5: "45",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "5",
//       v2: "cutting Blade",
//       v3: "Hardwares",
//       v4: "800",
//       v5: "10",
//       v6: "Add",
//       Link: " /ProductView",
//     },
//     {

//       v1: "6",
//       v2: "microprocessor",
//       v3: "Computer Accessories",
//       v4: "1000",
//       v5: "10",
//       v6: "Add",
//       Link: " /ProductView",
//     },
//     {

//       v1: "7",
//       v2: "computer Chip",
//       v3: "Computer Accessories",
//       v4: "500",
//       v5: "10",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "8",
//       v2: "GAMING MOUSE",
//       v3: "Computer & Laptop",
//       v4: "600",
//       v5: "17",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "9",
//       v2: "Bandages",
//       v3: "Health & Beauty ",
//       v4: "900",
//       v5: "100",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "10",
//       v2: "Stylish White Sunglasses",
//       v3: "Watch & Sunglasses",
//       v4: "800",
//       v5: "45",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "11",
//       v2: "cutting Blade",
//       v3: "Hardwares",
//       v4: "800",
//       v5: "10",
//       v6: "Add",
//       Link: " /ProductView",
//     },
//     {

//       v1: "12",
//       v2: "microprocessor",
//       v3: "Computer Accessories",
//       v4: "1000",
//       v5: "10",
//       v6: "Add",
//       Link: " /ProductView",
//     },
//     {

//       v1: "13",
//       v2: "computer Chip",
//       v3: "Computer Accessories",
//       v4: "500",
//       v5: "10",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "14",
//       v2: "GAMING MOUSE",
//       v3: "Computer & Laptop",
//       v4: "600",
//       v5: "17",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "15",
//       v2: "Bandages",
//       v3: "Health & Beauty ",
//       v4: "900",
//       v5: "100",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "16",
//       v2: "Stylish White Sunglasses",
//       v3: "Watch & Sunglasses",
//       v4: "800",
//       v5: "45",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "17",
//       v2: "cutting Blade",
//       v3: "Hardwares",
//       v4: "800",
//       v5: "10",
//       v6: "Add",
//       Link: " /ProductView",
//     },
//     {

//       v1: "18",
//       v2: "microprocessor",
//       v3: "Computer Accessories",
//       v4: "1000",
//       v5: "10",
//       v6: "Add",
//       Link: " /ProductView",
//     },
//     {

//       v1: "19",
//       v2: "computer Chip",
//       v3: "Computer Accessories",
//       v4: "500",
//       v5: "10",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "20",
//       v2: "GAMING MOUSE",
//       v3: "Computer & Laptop",
//       v4: "600",
//       v5: "17",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "21",
//       v2: "Bandages",
//       v3: "Health & Beauty ",
//       v4: "900",
//       v5: "100",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "22",
//       v2: "Stylish White Sunglasses",
//       v3: "Watch & Sunglasses",
//       v4: "800",
//       v5: "45",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "23",
//       v2: "cutting Blade",
//       v3: "Hardwares",
//       v4: "800",
//       v5: "10",
//       v6: "Add",
//       Link: " /ProductView",
//     },
//     {

//       v1: "24",
//       v2: "microprocessor",
//       v3: "Computer Accessories",
//       v4: "1000",
//       v5: "10",
//       v6: "Add",
//       Link: " /ProductView",
//     },
//     {

//       v1: "25",
//       v2: "computer Chip",
//       v3: "Computer Accessories",
//       v4: "500",
//       v5: "10",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "26",
//       v2: "GAMING MOUSE",
//       v3: "Computer & Laptop",
//       v4: "600",
//       v5: "17",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "27",
//       v2: "Bandages",
//       v3: "Health & Beauty ",
//       v4: "900",
//       v5: "100",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "28",
//       v2: "Stylish White Sunglasses",
//       v3: "Watch & Sunglasses",
//       v4: "800",
//       v5: "45",
//       v6: "Add",
//       Link: "/ProductView",
//     },
//     {

//       v1: "29",
//       v2: "cutting Blade",
//       v3: "Hardwares",
//       v4: "800",
//       v5: "10",
//       v6: "Add",
//       Link: " /ProductView",
//     },
//     {

//       v1: "30",
//       v2: "microprocessor",
//       v3: "Computer Accessories",
//       v4: "1000",
//       v5: "10",
//       v6: "Add",
//       Link: " /ProductView",
//     },
//     {

//        v1: "31",
//        v2: "microprocessor",
//        v3: "Computer Accessories",
//        v4: "1000",
//        v5: "10",
//        v6: "Add",
//        Link: " /ProductView",
//      },
//   ];
//   export default NewInvoicetArray;

// ///////////////////////////////////////////////////////////////////////////////////////

// import React, { useState } from "react";
// import Button from "react-bootstrap/Button";
// import Card from "react-bootstrap/Card";
// import Col from "react-bootstrap/Col";
// import Form from "react-bootstrap/Form";
// import Row from "react-bootstrap/Row";
// import Table from "react-bootstrap/Table";
// import Container from "react-bootstrap/esm/Container";
// import NavBar from "../../components/navbar/Navbar2";
// import Titlebars from "../../components/navbar/Titlebar";
// import MyVerticallyCenteredModal from "../newinvoice/NewInvoice";
// //import CreateInvoiceArray from "./CreateInvoiceArray";
// import CreateInv from "./CreateInv.jpg";
// import SaveIcon from '@mui/icons-material/Save';
// import AddIcon from '@mui/icons-material/Add';
// import RemoveCircleIcon from '@mui/icons-material/RemoveCircle';
// import ArrowBackIcon from '@mui/icons-material/ArrowBack';
// import DeleteIcon from "@mui/icons-material/Delete";

// function CreateInvoice({ selectedItems, onRemoveFromInvoice }) {
//  // const [modalShow, setModalShow] = React.useState(false);
//   //////////////////////
//   const handleRemoveFromInvoice = (itemId) => {
//     // Call the callback to remove the selected item from the parent component
//     onRemoveFromInvoice(itemId);
//   };

//   return (
//     <>
//       <Titlebars />
//       <NavBar />
//       <div
//         style={{
//           backgroundImage: `url(${CreateInv})`,
//           backgroundSize: "cover",
//           height: "auto",
//         }}
//       >
//         <Container style={{ width: 1100 }}>
//           <Row>
//             <Col md={5} xs={5}></Col>
//             <Col md={5} xs={5}>
//               <h1
//                 style={{
//                   marginTop: 70,
//                   WebkitTextStrokeColor: "yellow",
//                   WebkitTextStrokeWidth: "1px",
//                   color: "white",
//                   fontWeight: 800,
//                 }}
//               >
//                 Create Invoice
//               </h1>
//             </Col>
//             <Col md={2} xs={2}>
//               <Button
//                 href="/InvoiceTable"
//                 variant="primary"
//                 style={{ marginTop: 70,borderRadius:50 }}
//               ><ArrowBackIcon></ArrowBackIcon>
//                 Back To Invoice
//               </Button>{" "}
//             </Col>
//           </Row>
//           <Row>
//             <Col>
//               <Button variant="success" href="/NewInvoice"  style={{borderRadius:50 }} ><AddIcon />
//                 Add Item
//               </Button>{" "}

//               <Button href="#Save" style={{borderRadius:50 }} variant="info"><SaveIcon/>
//                 Save Invoice
//               </Button>{" "}
//               <Button href="#remove" style={{borderRadius:50 }} variant="danger"><DeleteIcon/>
//                 Delete Invoice
//               </Button>{" "}
//             </Col>
//           </Row>

//           <Card
//             className="commoncard"
//             style={{ marginTop: 30 }}
//           >
//             <Container style={{ width: 1000 }}>
//               <Form>
//                 <Row>
//                   <h4
//                     style={{
//                       textAlign: "center",
//                       marginTop: 10,
//                       WebkitTextStrokeColor: "black",
//                       WebkitTextStrokeWidth: "2px",
//                       color: "white",
//                       fontWeight: 800,
//                     }}
//                   >
//                     Shop Owner Details
//                   </h4>
//                 </Row>

//                 <Row style={{ marginTop: 30 }}>
//                   <Col>
//                     <Form.Label>Customer Name</Form.Label>
//                     <Form.Control type="text" placeholder="Enter name" />
//                   </Col>
//                   <Col>
//                     <Form.Label>Phone Number</Form.Label>
//                     <Form.Control type="text" placeholder="Phone Number" />
//                   </Col>
//                 </Row>

//                 <Row style={{ marginTop: 20 }}>
//                   <Col>
//                     <Form.Label>Email</Form.Label>
//                     <Form.Control type="email" placeholder="Enter email" />
//                   </Col>
//                   <Col>
//                     <Form.Label>Invoice ID</Form.Label>
//                     <Form.Control type="text" placeholder="ID10147" />
//                   </Col>
//                 </Row>
//                 <Row style={{ marginTop: 20 }}>
//                   <Col>
//                     <Form.Label>Date</Form.Label>
//                     <Form.Control type="date" placeholder="Billing Date" />
//                   </Col>
//                   <Col>
//                     <Form.Label>Due Date</Form.Label>
//                     <Form.Control type="date" placeholder="Date of Due" />
//                   </Col>
//                 </Row>

//                 <Row style={{ marginTop: 40 }}>
//                   <Form.Label>
//                     <h3
//                       style={{
//                         textAlign: "center",
//                         WebkitTextStrokeColor: "black",
//                         WebkitTextStrokeWidth: "2px",
//                         color: "white",
//                         fontWeight: 800,
//                       }}
//                     >
//                       Company Details
//                     </h3>
//                   </Form.Label>
//                 </Row>
//                 <Form.Group className="mb-3" controlId="formGridCompanyName">
//                   <Form.Label>Company Name</Form.Label>
//                   <Form.Control placeholder="Name of the company" />
//                 </Form.Group>

//                 <Form.Group className="mb-3" controlId="formGridAddress1">
//                   <Form.Label>Customer Address</Form.Label>
//                   <Form.Control placeholder="1234 Main St" />
//                 </Form.Group>

//                 <Form.Group className="mb-3" controlId="formGridAddress2">
//                   <Form.Label>Company Address</Form.Label>
//                   <Form.Control placeholder="Apartment, studio, or floor" />
//                 </Form.Group>

//                 <Row className="mb-3">
//                   <Form.Group as={Col} controlId="formGridStatus">
//                     <Form.Label>Payment Status</Form.Label>
//                     <Form.Select defaultValue="Choose...">
//                       <option>Choose...</option>
//                       <option>Paid</option>
//                       <option>Not Paid</option>
//                       <option>On Due</option>
//                     </Form.Select>
//                   </Form.Group>

//                   <Form.Group as={Col} controlId="formGridState">
//                     <Form.Label>State</Form.Label>
//                     <Form.Select defaultValue="Choose...">
//                       <option>Choose...</option>
//                       <option>Tamil Nadu</option>
//                       <option>Kerala</option>
//                       <option>Kasmir</option>
//                       <option>Delhi</option>
//                       <option>Andra Pradesh</option>
//                       <option>Madhya Pradesh</option>
//                       <option>Karnataka</option>
//                       <option>Bihar</option>
//                       <option>Gujarat</option>
//                       <option>Harayana</option>
//                     </Form.Select>
//                   </Form.Group>

//                   <Form.Group as={Col} controlId="formGridPin">
//                     <Form.Label>Pin No</Form.Label>
//                     <Form.Control />
//                   </Form.Group>
//                 </Row>

//                 <Form.Group className="mb-3" id="formGridCheckbox">
//                   <Form.Check type="checkbox" label="Check me out" />
//                 </Form.Group>

//                 <Button className="submitbutton type1" type="submit">
//                   Submit
//                 </Button>
//                 <Row style={{ marginTop: 20 }}></Row>
//               </Form>
//             </Container>
//           </Card>
//           <Row>
//             {" "}
//             <h1
//               style={{
//                 marginTop: 50,
//                 marginBottom: 50,
//                 textAlign: "center",
//                 WebkitTextStrokeColor: "yellow",
//                 WebkitTextStrokeWidth: "1px",
//                 color: "white",
//                 fontWeight: 800,
//               }}
//             >
//               Billing Products
//             </h1>
//           </Row>

//           <Table striped hover>
//             <thead>
//               <tr>
//                   <th>Id</th>
//                   <th>Product Name </th>
//                   <th> Quantity</th>
//                   <th>Price</th>
//                   <th>Sub.Total </th>
//                   <th>Remove</th>

//               </tr>
//             </thead>
//             <tbody>
//               {selectedItems.map((item) => (
//                  <tr key={item.v1}>
//                  <td>{item.v1}</td>
//                  <td>{item.v2}</td>
//                  <td>qty</td>
//                  <td>{item.v4}</td>
//                  <td>total</td>
//                  <Button
//                      variant="danger"
//                      onClick={() => handleRemoveFromInvoice(item.v1)}
//                    >
//                      Remove
//                    </Button>
//                </tr>
//               ))}
//               <tr>
//                 <td colSpan={2}></td>
//                 <th colSpan={2}> TOTAL</th>
//                 <td>150000</td>
//                 <td></td>
//               </tr>
//             </tbody>
//           </Table>
//           <Row style={{ marginTop: 40 }}></Row>
//         </Container>
//       </div>
//     </>
//   );
// }

// export default CreateInvoice;

// ////////////////////////////////////////////////////////////////////////

// import Button from "react-bootstrap/Button";
// import Col from "react-bootstrap/Col";
// import Form from "react-bootstrap/Form";
// //import InputGroup from "react-bootstrap/InputGroup";
// import Modal from "react-bootstrap/Modal";
// import Row from "react-bootstrap/Row";
// import Table from "react-bootstrap/Table";
// import Container from "react-bootstrap/esm/Container";
// //import Heading from "./NewInvoiceArray";
// import React, { useState } from "react";
// import NewInvoicetArray from "./NewInvoiceArray";
// import SearchIcon from '@mui/icons-material/Search';
// import AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';
// import RefreshIcon from '@mui/icons-material/Refresh';

// function NewInvoice({ onAddToInvoice, onRemoveFromInvoice }) {
//   const [searchQuery, setSearchQuery] = useState("");
//   const [category, setCategory] = useState("");
//   const [price, setPrice] = useState("");
//   const [filteredProducts, setFilteredProducts] = useState(NewInvoicetArray);

//   const filterProducts = () => {
//     const lowerCaseQuery = searchQuery.toLowerCase();
//     const lowerCaseCategory = category.toLowerCase();
//     const filtered = NewInvoicetArray.filter(
//       (product) =>
//         product.v2.toLowerCase().includes(lowerCaseQuery) &&
//         product.v3.toLowerCase().includes(lowerCaseCategory) &&
//         product.v4.toString().includes(price)
//     );
//     setFilteredProducts(filtered);
//   };

//   const resetSearch = () => {
//     setSearchQuery("");
//     setCategory("");
//     setPrice("");
//     setFilteredProducts(NewInvoicetArray);
//   };

//   /////////////////////////////////////

//   const handleAddToInvoice = (selectedItem) => {
//     // Call the callback to add the selected item to the parent component
//     onAddToInvoice(selectedItem);
//   };

//   return (
//     < >
//       <Modal.Header closeButton>
//         <Modal.Title id="contained-modal-title-vcenter">
//           Search & Add Product
//         </Modal.Title>
//       </Modal.Header>

//       <Modal.Body>
//         <Container style={{ marginTop: 5 }}>
//           <Row>
//             <h5>New Invoice</h5>
//           </Row>

//           <Row style={{ marginTop: 50 }}>
//             <Form>
//               <Row>
//                 <Col xs={1}></Col>
//                 <Col>
//                   <Form.Control
//                     style={{ border: "2px solid cadetblue" }}
//                     placeholder="Product Name"
//                     value={searchQuery}
//                     onChange={(e) => setSearchQuery(e.target.value)}
//                     onBlur={filterProducts}
//                   />
//                 </Col>
//                 <Col>
//                   <Form.Group controlId="formGridState">
//                     <Form.Select
//                       style={{ border: "2px solid cadetblue" }}
//                       value={category}
//                       onChange={(e) => setCategory(e.target.value)}
//                       onBlur={filterProducts}
//                     >
//                       <option value="">Choose category</option>
//                       <option value="Hardwares">Hardwares</option>
//                       <option value="Computer Accessories">
//                         Computer Accessories
//                       </option>
//                       <option value="Health & Beauty ">Health & Beauty</option>
//                       <option value="Watch & Sunglasses">
//                         Watch & Sunglasses
//                       </option>
//                       <option value="Computer & Laptop">
//                         Computer & Laptop
//                       </option>
//                     </Form.Select>
//                   </Form.Group>
//                 </Col>
//                 <Col>
//                   <Form.Control
//                     style={{ border: "2px solid cadetblue" }}
//                     placeholder="Price"
//                     value={price}
//                     onChange={(e) => setPrice(e.target.value)}
//                     onBlur={filterProducts}
//                   />
//                 </Col>
//                 <Col>
//                   <Button className="Commonbuttongreen" onClick={filterProducts}><SearchIcon></SearchIcon>
//                     Search
//                   </Button>{" "}
//                 </Col>
//                 <Col >
//                   {(searchQuery || category || price) && (
//                     <Button variant="danger" style={{borderRadius:50}} onClick={resetSearch}><RefreshIcon></RefreshIcon>
//                       Reset
//                     </Button>
//                   )}
//                 </Col>
//               </Row>
//             </Form>
//           </Row>

//           <Row style={{ marginTop: 20 }}>
//             <Table striped hover>
//               <thead>
//                 <tr>
//                   <th>ID</th>
//                   <th>Product Name</th>
//                   <th>Category</th>
//                   <th>Price</th>
//                   <th>Stock</th>
//                   <th>Add Product</th>
//                 </tr>
//               </thead>
//               <tbody>
//                    { NewInvoicetArray.map((d) => (
//                      <tr key={d.v1}>
//                        <td>{d.v1}</td>
//                        <td>{d.v2}</td>
//                        <td>{d.v3}</td>
//                        <td>{d.v4}</td>
//                        <td>{d.v5}</td>

//                     <td>
//                         <Button
//                           variant="info"
//                           className="AddButton"
//                           onClick={() => handleAddToInvoice(d)}
//                         >
//                           {d.v6}
//                         </Button>
//                       </td>
//                     </tr>
//                   ))}
//                 </tbody>
//             </Table>
//           </Row>
//         </Container>
//       </Modal.Body>
//       <Modal.Footer>
//         <Button  variant="danger" style={{borderRadius:50}}>Close</Button>
//       </Modal.Footer>
//     </>
//   );
// }
// export default NewInvoice;

// ////////////////////////////////////////////////////////////////////////////////////////////

// import React, { useState } from "react";
// import { BrowserRouter, Route, Routes } from "react-router-dom";
// import Login from "./components/authentication/Login";
// import SignUp from "./components/authentication/SignUP";
// import CreateCategory from "./screens/createcategory/CreateCategory";
// import CreateEmployee from "./screens/createemployee/CreateEmployee";
// import CreateInvoice from "./screens/createinvoice/CreateInvoice";
// import CreateProduct from "./screens/createproduct/CreateProduct";
// import Dashboard from "./screens/dashboard/Dashboard";
// import EmployeeTable from "./screens/employee/EmployeeTable";
// import InvoiceTable from "./screens/invoice/InvoiceTable";
// import NewInvoice from "./screens/newinvoice/NewInvoice";
// import ProductTable from "./screens/productList/ProductTable";
// import ProductCategory from "./screens/productcategory/CategoryTable";
// import ShopOwnerDetails from "./screens/shop/ShopOwnerDetails";
// import UserProfile from "./screens/shop/UserProfile";
// import CategoryView from "./views/CategoryView";
// import EmployeeView from "./views/Employeevew";
// import InvoiceView from "./views/InvoiceView";
// import ProductView from "./views/productview";
// import ProductCategoryList from "./views/ProductCategoryList";

// function App() {

// const [selectedItems, setSelectedItems] = useState([]);

// const handleAddToInvoice = (selectedItem) => {
//   // Add the selected item to the state
//   setSelectedItems((prevItems) => [...prevItems, selectedItem]);
// };

// const handleRemoveFromInvoice = (itemId) => {
//   // Remove the selected item from the state
//   setSelectedItems((prevItems) => prevItems.filter((item) => item.v1 !== itemId));
// };

//   return (
//     <div className="App">
//       <BrowserRouter>
//         <Routes>
//           <Route path="/" element={<Login />} />
//           <Route path="/UserProfile" element={<UserProfile />} />
//           <Route path="/EmployeeTable" element={<EmployeeTable />} />
//           <Route path="/ProductCategory" element={<ProductCategory />} />
//           <Route path="/ProductTable" element={<ProductTable />} />
//           <Route path="/InvoiceTable" element={<InvoiceTable />} />
//           <Route path="/CreateEmployee" element={<CreateEmployee />} />
//           <Route path="/CreateProduct" element={<CreateProduct />} />
//           <Route path="/CreateCategory" element={<CreateCategory />} />
//           <Route path="/CreateInvoice" element={  < CreateInvoice selectedItems={selectedItems} onRemoveFromInvoice={handleRemoveFromInvoice} />} />
//           <Route path="/NewInvoice" element={  < NewInvoice onAddToInvoice={handleAddToInvoice} />} />
//           <Route path="/Dashboard" element={<Dashboard />} />
//           <Route path="/ProductCategoryList" element={<ProductCategoryList/>} />
//           <Route path="SignUp" element={<SignUp />} />
//           <Route path="ProductView" element={<ProductView />} />
//           <Route path="EmployeeView" element={<EmployeeView />} />
//           <Route path="CategoryView" element={<CategoryView />} />
//           <Route path="InvoiceView" element={<InvoiceView />} />
//           <Route path="/ShopOwnerDetails" element={<ShopOwnerDetails />} />
//         </Routes>
//       </BrowserRouter>
//     </div>
//   );
// }

// export default App;
